<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<description>Spring MVC Configuration</description>
	<!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath*:/global.properties" />

	<!--容器级获取属性配置-->
	<bean id="propertyConfigurer" class="com.xzg56.utility.PropertyUtil">
		<property name="locations">
			<list>
				<value>classpath:payment.properties</value>
				<value>classpath:getui.properties</value>
			</list>
		</property>
	</bean>
	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com.xzg56" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为true -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true"/>
				<property name="objectMapper">  
					<bean class="com.xzg56.core.mapper.JsonMapper"></bean>
				</property> 
			</bean>

		</mvc:message-converters>
		<mvc:argument-resolvers>
			<bean class="com.xzg56.core.web.SecureModelAttributeMethodArgumentResolver">
				<constructor-arg value="false"/>
			</bean>
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes" >
			<map>
				<entry key="xml" value="application/xml"/>
				<entry key="json" value="application/json"/>
			</map>
		</property>
		<property name="ignoreAcceptHeader" value="true"/>
		<property name="favorPathExtension" value="true"/>
	</bean>

	<!-- 视图文件解析配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="${web.view.prefix}"/>
		<property name="suffix" value="${web.view.suffix}"/>
	</bean>

	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler/>

	<!-- 定义无Controller的path<->view直接映射 -->
	<!-- <mvc:view-controller path="/" view-name="redirect:${web.view.index}"/> -->

	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/sys/**"/>
			<bean class="com.xzg56.common.interceptor.SysMenuInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 支持Shiro对Controller的方法级AOP安全控制 begin-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<!-- 集群认证时，注释以下配置 -->
	<!--
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
            </props>  
        </property>  
    </bean>
    -->

	<!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="maxUploadSize" value="${web.maxUploadSize}" />  
    </bean>
    <!-- 国际化配置 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    	<property name="basenames">
    		<list>
				<value>i18n/applicationResource</value>
				<value>i18n/applicationResourceFinance</value>
				<value>i18n/applicationResourceCommon</value>
    		</list>
    	</property>
    	<property name="useCodeAsDefaultMessage" value="true"/>
    
    </bean>
</beans>